---
title: "Neovascular Age-related Macular Degeneration Visual Outcomes"
author: "Me"
format: 
  html:
    code-fold: show
    code-link: true
    self-contained: true
    toc: true
    code-tools:
      source: true
      toggle: true
      caption: Code
editor_options: 
  chunk_output_type: console
---

# Overview

**Aim:** to explore 12 year dataset of patients with treatment-naive neovascular age-related macular degeneration (AMD) who received intravitreal anti-VEGF therapy ([Fu et al](https://jamanetwork.com/journals/jamaophthalmology/fullarticle/2772986))

# Session 1

::: callout-tip
Pre-requisites:

-   Install R and RStudio, as per [r4ds guidance](https://r4ds.hadley.nz/intro#prerequisites "r4ds guidance")
-   Install the tidyverse set of packages (run install.packages("tidyverse") in the R console)

Topics:

-   Starting a new R project
-   R basics (data types, functions, variables)
-   Scripts
-   Importing tabular data from a csv to a data frame in R
-   Selecting columns and filtering for rows using select() and filter() (from the dplyr package, tidyverse)
-   Viewing and summarising data
-   Boxplots with ggplot
:::

Start your notebook by loading any required packages and importing raw data

```{r}
#| message: false
#| warning: false
library(tidyverse)
library(dplyr) # sdf

amd <- read_csv("MEH_AMD_survivaloutcomes_database.csv")
```

## Explore data

Look at the first few rows using `head()` (in RStudio consider also using `View()` for an interactive table viewer)

```{r}
head(amd)
```

Summarise with `summary()`

```{r}
summary(amd)
```

## Selecting columns and filtering rows

-   Select visual acuity, age group and injection number columns
-   Filter for first injections only

```{r}
amd_first_injection_vas <- amd |>
  select(anon_id,
         va, 
         time, 
         age_group) |>
  filter(time == 0)
```

> -   N rows in full dataset: `r nrow(amd)`
> -   N rows in filtered dataset: `r nrow(amd_first_injection_vas)`

## Plots

Box and whisker plots

```{r}
amd_first_injection_vas |>
    ggplot(aes(x = age_group, y = va)) +
    geom_boxplot(aes(fill = age_group)) +
    theme_bw()
```

Histogram

```{r}
amd_first_injection_vas |>
    ggplot(aes(x = va)) +
    geom_histogram(aes(fill = age_group), alpha = 0.7, binwidth = 5) +
    theme_bw()
```

# Session 2

```{r}
#| message: false
#| warning: false
# Note: while we call library() here, in general you should always put *all* library() calls and variables at the start of your script/notebook
library(gtsummary)
library(flextable)
```

::: callout-tip
Topics:

-   More data wrangling
-   Creating a manuscript 'Table 1'
-   Linear regression
:::

## More wrangling - VA at month 12

![](https://bioinformatics-core-shared-training.github.io/r-intro/images/group_and_summarise.png) A common workflow is to summarise data by groups e.g. N eyes by treatment regimen:

```{r}
amd |>
  group_by(regimen) |>
  # `n_distinct(anon_id)` ensures we get number of eyes by treatment regimen, rather than number of observations which would be `summarise(n_observations = n())` or `summarise(n_observations = length(anon_id))`
  summarise(n_ids = n_distinct(anon_id))
```

Here we will use `group_by()` with `mutate()` to create a new column recording time from baseline, grouped by eye ID:

```{r}
amd_12_month <- amd |>
  # first group by eye
  group_by(anon_id) |>
  
  # create a new column with time (in days) from 1 year. We use `abs()` to convert negative values to positive
  mutate(time_from_12_months = abs(365 - time)) |>
  
  # take one row of data per eye, the one closest to 1 year
  slice_min(time_from_12_months, with_ties = FALSE, na_rm = TRUE) |>
  
  # remember to ungroup
  ungroup() |>

  # VA must be within one month of 1 year to be included
  filter(time_from_12_months < 30) |>
  
  # rename va column to indicate this is now VA at 12 month only
  rename(va_12m = va)
```

Baseline vision is already recorded under `va_inj1`. If it wasn't then we could have achieved the same result using a [join](https://r4ds.hadley.nz/joins.html), instead of `slice_min()`:

```{r}
# data frame with just (i) ID and (ii) vision at baseline columns (for demonstration)
amd_0_month <- amd_first_injection_vas |>
  select(anon_id,
         va_0m = va)

amd_12_month |>
  # remove baseline vision column for demonstration purposes
  select(-va_inj1) |>
  
  # join data frame with baseline vision
  left_join(amd_0_month,
            by = "anon_id") |>
  
  # select columns (for demonstration)
  select(anon_id,
         starts_with("va_"))
```

## Create table 1

By hand:

```{r}
amd_12_month |>
  summarise(median_baseline_va = median(va_inj1, na.rm = TRUE),
            median_12month_va = median(va_12m, na.rm = TRUE))
```

Using `gtsummary::tbl_summary()`:

```{r}
amd_12_month |>
  select(gender,
         age_group,
         ethnicity,
         va_inj1,
         va_12m,
         date_inj1,
         regimen) |>
  tbl_summary()
```

...and by date of baseline injection, with group comparison:

```{r}
amd_12_month |>
  select(gender,
         age_group,
         ethnicity,
         va_inj1,
         va_12m,
         date_inj1,
         regimen) |>
  tbl_summary(by = "date_inj1") |>
  add_p() |>
  bold_p()
```

## Linear regression

Is baseline vision associated with vision at 12 months?

Visualise:

```{r}
amd_12_month |>
  ggplot(aes(x = va_inj1,
             y = va_12m)) +
  geom_point(alpha = 0.3, 
             position = "jitter") +
  geom_smooth(method = "lm") +
  theme_bw()
```

Linear regression model with one predictor (baseline VA) for VA at 12 months (outcome), summarised using `summary()`:

```{r}
lm_12m_va <- lm(va_12m ~ va_inj1, data = amd_12_month)
summary(lm_12m_va)
```

Can also summarise using `tbl_regression()`:

```{r}
tbl_regression(lm_12m_va) |>
  bold_p()
```
